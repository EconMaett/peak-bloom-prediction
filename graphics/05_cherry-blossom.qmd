---
title: "Cherry blossom"
subtitle: "Plant physiology and climate"
format: 
  html:
    theme: darkly
    code-fold: show
editor: source
---

MichaÃ«l's blog post <https://r.iresmi.net/posts/2023/cherry_blossom/>

It's cherry blossom time ...

A nice dataset going back to the year 812 in Japan can be found [here](http://atmenv.envi.osakafu-u.ac.jp/aono/kyophenotemp4/). It describes the phrenological data for full flowering date of cherry tree (*Prunus jamasakura*) in Kyoto, showing springtime climate changes.

## Changes

-   Try to use the `{httr2}` package instead of the `{httr}` R package.

-   Try to use `{tidyverse}` functions instead of `{janitor}` functions.

-   Try to avoid using the `{fs}` R package.

-   Use `paste0()` instead of `{glue}` functions.

## Load packages

Clear your workspace, load all the necessary packages for this exercise, ensure that your locale is set to an English speaking country, and define all the URLs.

```{r}
#| label: load-pkgs
#| echo: false

rm(list = ls(all.names = TRUE))

url_kyoto   <- "http://atmenv.envi.osakafu-u.ac.jp/aono/kyophenotemp4/"
file_kyoto  <- "data/kyoto.rds" # cache data
url_sakura  <- "https://www.flaticon.com/download/icon/7096433?icon_id=7096433&author=232&team=232&keyword=Sakura&pack=packs%2Fsakura-festival-59&style=522&format=png&color=&colored=2&size=512&selection=1&premium=0&type=standard&search=cherry+blossom"
icon_sakura <- "graphics/sakura.png" # cache icon

library(tidyverse)
library(httr2)
library(rvest)
library(glue)
library(ggimage)

invisible(Sys.setlocale("LC_TIME", "en_GB.UTF-8")) # English date labels
```

Get the cherry blossom icon from the web.

```{r}
#| label: get-sakura-icon
#| output: false

if (!file.exists(icon_sakura)) {
  download.file(url = url_sakura, destfile = icon_sakura, method = "curl")
}
```

Next, we use the `{httr2}` R package to request the HTML of the website containing the data, and use the `{rvest}` package to extract the data from the HTML files.

Full-flowering Dates of Prunus jamasakura in Kyoto City (Plain Text Version) (for 9th to 14th centuries: Aono and Saito, 2010; Int. J. Biometeorol.,54, 211-219) (for 15th to 21st centuries: Aono and Kazui, 2008; Int. J. Climatol., 28, 905-914)

-   STNNo. : Station Number, KYOTO has the No.47759
-   FiFD : First-flowering date in Gregorian calendar
-   FuFD : Full-flowering date in Gregorian calendar
-   WORK : Shows works in which acquired phenological data 1 : Taguchi (1939) 2 : Sekiguchi (1969) 3 : Aono and Omoto (1994) 4 : Aono and Kazui (2008) 5 : Aono and Saito (2010) 6 : Aono (2011) 7 : Aono (2012) 8 : Found after paper submission
-   TYPE : Data type, which shows priority for phenological data preposition 0 : data from modern times (full-bloom date since 1880s) 1 : from diary description about full-bloom 2 : from diary description about cherry blossom viewing party 3 : from diary description about presents of cherry twigs from party participants 4 : title in Japanese poetry 8 : estimated by full-flowering dates of wisteria 9 : estimated by full-flowering dates of Japanese kerria

Wrap this into an if-statement.

```{r}
#| label: get-data

# Goal is to extract the table
# STNNo. A.D. FiFD FuFD WORK TYPE Name of reference
html <- read_html(url_kyoto)

df <- html |> 
  html_element("pre") |> 
  html_text2() |>
  str_replace_all("\xc2\xa0", " ") |> # remove non-breaking space 
  read_fwf(
    col_positions = fwf_cols(
      "stnno" = c( 1,  6),
      "ad"    = c( 7, 10),
      "fifd"  = c(17, 20),
      "fufd"  = c(22, 25),
      "work"  = c(27, 30),
      "type"  = c(32, 35),
      "ref"   = c(37, Inf)
      ), 
    skip = 26, 
    na = c("", "NA", "-")
    ) |> 
    mutate(
      full_flowering_date = ymd(paste0(str_pad(ad, 4, "left", "0"), fufd)),
      full_flowering_date_doy = yday(full_flowering_date)
      ) |> 
  filter(!is.na(fufd))

# View(df)

write_rds(df, file = file_kyoto)
```

Create the plot

```{r}
#| label: plot-data
#| output: false

# Read the data from disk
df <- read_rds(file = file_kyoto)

# Add a random size variable as input for geom_image()
df <- df |> 
  mutate(
    random_size = sample(
      x = c(0.015, 0.020, 0.025, 0.030), 
      size = nrow(df), 
      replace = TRUE)
  )

# View(df)

# Create the plot
myplot <- ggplot(data = df, mapping = aes(x = full_flowering_date, y = full_flowering_date_doy))

# ?parse_date_time
```

## Save the plot

```{r}
#| label: save-plot
#| eval: false
#| echo: false

ggsave("images/cherry_blossom.png", width = 25, height = 18, units = "cm", dpi = 350)
```
