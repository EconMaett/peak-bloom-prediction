---
title: "Visualizing Japan cherry blossom season forecast 2018 ‚Äî doing it all in R"
format: 
  html:
    theme: darkly
    code-fold: show
editor: source
---

Original post on Medium: <https://towardsdatascience.com/visualizing-japan-cherry-blossom-season-forecast-2018-doing-it-all-in-r-8b0ef46a6762>.

Another animated data visualization experience for educational purposes leveraging FFmpeg for images to MP4 conversion

Recently, I had the immense joy to visit Japan for the first time. This trip was the perfect introduction to Japan‚Äôs beautiful stunning landscapes, history, and rich culture. One thing I dearly missed was being able to see the cherry blossoms. So I decided to make it the topic of this visualization.

Looking around for datasets (ideally geojson with dates), unfortunately there was no such dataset usable as is.

Not an issue. I decided to build a simple webscraping from the [official forecast webpage from JR Rail Pass for 2018](https://www.jrailpass.com/blog/japan-cherry-blossom-forecast) It involved downloading a table then mapping that table to name of Japanese regions. There was some data cleaning operations necessary to identify flowering , full blossom, and end of flowering periods. Luckily, the official forecast webpage gave me the needed assumptions of 1 week before full blossom for flowering and one week after full blossom for end of flowering:

> ‚ÄúPlease keep in mind that most flowers usually take a week to reach full bloom once flowering has begun and that full bloom also lasts around a week‚Äù (JR Rail Pass blog)

Below is the result of the experience that we will be building.

This approach does not use any library. The goal is to help people better understand what‚Äôs happening behind the scene. A movie is a series of still images when played image by image create the illusion of movement. This tutorial will do the same by generating 55 pictures (one for each day) and will use FFmpeg to convert them into a movie (2 lines of code).

Sallie Gardner at a Gallop ‚Äî made by Eadweard Muybridge in 1878

## Using R

We will skip Step 0 (webscraping and data cleaning to create the dataset) and focus on Step 1 to 3 ‚Äî Loading files, generating images and converting them into a movie.

### Step 1 ‚Äî Loading and preparing the files

We will be using 2 files: \* 1) Dataset obtained from JR Rail Pass \* 2) Geojson file from Japan that we will convert into a dataframe with each region‚Äôs name

```{r}
#| label: load-data
#| output: false

# Step 1 - Load the data sets
myurl <- "https://raw.githubusercontent.com/tristanga/Visualizing-Japan-cherry-blossom-season-forecast-2018/master/sakura_2018.csv"
sakuradf <- read.csv(myurl)
sakuradf$sakura <- as.factor(sakuradf$sakura)

# Loading geojson Japan map and convert it into dataframe
myurl <- "https://raw.githubusercontent.com/tristanga/Visualizing-Japan-cherry-blossom-season-forecast-2018/master/Japan.json"
map_japan <- geojson_read(myurl, what = "sp")
map_japan.df <- fortify(map_japan)

# Adding the name to the region
myid <- as.data.frame(map_japan@data)
myid$id <- seq.int(nrow(myid)) - 1
myid <- myid |>
  select(id, name)
map_japan.df <- merge(map_japan.df, myid, by.x = "id", by.y = "id")
```

### Step 2 ‚Äî Generating 55 images

We first have to create a filter with all the unique dates. Since some regions like Okinawa are not well visible on the geojson map used, it‚Äôs better to start on the 65th day of the cherry blossom forecast all the way to the end instead of the 1st day.

A theme for {ggplot2} is needed for a nicer result from `ggplot()` (see `theme_map`).

Then, it‚Äôs just about a creating a simple loop from 65th day to the end, filtering on the day and merging with the JSON then saving an image into a map folder.

```{r}
#| label: generate-images

# Step 2 - Generating 55 images
# Creating a filter of all the dates
mydates <- unique(sakuradf$date)
# Displaying only the last 55 days of the season (skipping Okinawa region)
startdate <- 65
enddate <- length(mydates)
# Generating a style
theme_map <- function(base_size = 12) {
  theme_minimal() +
    theme(
      axis.line = element_blank(),
      axis.text.x = element_blank(),
      axis.text.y = element_blank(),
      axis.ticks = element_blank(),
      axis.title.x = element_blank(),
      axis.title.y = element_blank(),
      # panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
      panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
      panel.grid.minor = element_blank(),
      plot.background = element_rect(fill = "#f5f5f2", color = NA),
      panel.background = element_rect(fill = "#f5f5f2", color = NA),
      legend.position = "None", legend.title = element_blank(),
      panel.border = element_blank()
    )
}
# Creating a loop to filter on each day, generate a chart and saving 55 images in a map folder
for (x in startdate:enddate) {
  my_x <- mydates[x]
  print(paste("The year is", my_x))
  sakuradf_x <- sakuradf %>% filter(date == my_x)
  map_japan.df_x <- merge(map_japan.df, sakuradf_x, by.x = "name", by.y = "name")
  japanplot <- ggplot(map_japan.df_x) +
    geom_polygon(aes(x = long, y = lat, fill = sakura, group = group)) +
    theme_map() +
    scale_fill_manual(values = c("4" = "#d2618c", "3" = "#e3adcb", "2" = "#f7e0f4", "1" = "#9db6c7")) +
    ylim(30, 46) +
    xlim(127, 148) +
    labs(
      x = NULL,
      y = NULL,
      title = "Japan Sakura Seasons",
      subtitle = paste("Date: ", my_x, sep = ""),
      caption = "Japan Weather Forecast 2018"
    )
  filename <- paste0("maps/img_", str_pad(x - 64, 7, pad = "0"), ".png")
  ggsave(filename = filename, plot = japanplot, width = 5, height = 5, dpi = 150, type = "cairo-png")
}
```

### Step 3 ‚Äî From images to movie

2 simple lines of code are needed to create the movie, as long as you have downloaded FFmeg and unzipped it into local folder like ‚ÄòC:/ffmpeg‚Äô. If you don‚Äôt have FFmeg, you can download it at this url: <https://www.ffmpeg.org/?source=post_page-----8b0ef46a6762-------------------------------->.

```{r}
#| label: create-movie

# Step 3 - Creating a movie from the images (please note that ffmeg is on my C:/)
makemovie_cmd <- paste0("C:/ffmpeg/bin/ffmpeg -framerate 5 -y -i ", paste0(getwd(), "/maps/img_%7d.png"), " -r 56 -pix_fmt yuv420p ", paste0(getwd(), "/maps/"), "sakura_movie.mp4")
system(makemovie_cmd)
```

A `sakura_movie.mp4` is then created in the map folder. You can find the full code and files on [Github](https://github.com/tristanga/Visualizing-Japan-cherry-blossom-season-forecast-2018).

If you liked the visualization don‚Äôt forget to clap with the clap button on the post page üëè. You can clap up to 50 times per post. Feel free to contact me on LinkedIn if you have questions.
